package dev.tomco.a23a_10357_l02;

import java.util.ArrayList;

public class GameManager {
    private boolean isLocked;

    private int[] flags = new int[]{
            0,0,
            0,0,
            0,0,
            0,0,
            0,0,
            0,0,
            0,0,
            0,0,
            0,0,

    };
    private String[] names = new String[]{
            "ערכנו בדיקת עומסים שכללה כלי מחולל לעומסים generator url שהותקן עם השרת על אותו מחשב, כדי להעמיסו. הסתבר שבקשות מעבר לעומס של 800 K בקשות לשניה, נדחות על ידי השרת - תוצאה שאינה רצויה מבחינתנו. מה כדאי לעשות?",
            "צוות הבדיקות דיווח תקלה על כך שהמערכת הנבדקת מתנהגת שונה על מערכות הפעלה B,A וזאת עקב שוני בין המערכות באשר לעיגול מספרים בני יותר מ3- ספרות לאחר הנקודה. התוצאה הרצויה מבחינתנו הינה ההתנהגות של מערכת ההפעלה B. לאחרונה יצא לשוק עדכון למערכת הפעלה A, ולאחר התקנת העדכון מערכת ההפעלה A מתנהגת בדיוק כמו מערכת הפעלה B. מה יקרה לדיווח התקלה, במצב כזה?",
            "ידוע עקרון הבדיקות ''פאראדוקס מדביר החרקים''. איזו מהפעולות הבאות,שנעשה לקראת סבב הבדיקות הבא, עשויה לשפר מעט את התופעה שמתאר עקרון זה?",
            "לאחרונה החליט מנהל הפיתוח, שיש לפצל את כל הפונקציות בעלות 10<cc לשתי פונקציות נפרדות שיופעלו זו אחר זו. הקוד יבצע אותו דבר בדיוק. איזו השפעה תהיה לכך, על בדיקות האינטגרציה?",
            "להלן רשימת מטלות שצוות הבדיקות צריך לבצע. מכל המטלות להלן, איזו הכי פחות מתאימה להעברה לאוטומציה?",
            "אנחנו עובדים בשיטת scrum. בישיבה היומית, בעת הערכות הצוות על משך כל משימה, נתגלו פערים רבים בין חברי הצוות. מה כדאי לעשות, במקרה כזה?",
            "אנחנו בודקים קוד בשיטת data flow. מכל הרשומים להלן, איזו בעיה כנראה מצאנו?",
            "פעולה במהלכה אנו מגדירים את מנות הבדיקה, הינה פעולה בתוך תהליך הבדיקות הבסיסי, השייכת לשלב ה -",
            "איזו מהפעולות הבאות, עשויה להקטין את הנתיב הקריטי?",
            "ערכנו בדיקת עומסים שכללה כלי מחולל לעומסים url generator שהותקן עם השרת כדי להעמיסו. הסתבר שהתוצאות היו מצוינות, בכל רמת עו מס שהשרת קבל, קבלנו מענה מיידי. למעשה לא הצלחנו להוכיח עומס כלשהו על השרת. מה כדאי לעשות?",
            "צוות הבדיקות דיווח תקלה על כך שהמערכת הנבדקת מתנהגת שונה על מערכות הפעלה B,A וזאת עקב שוני בין המערכות באשר לעיגול מספרים בני יותר מ3- ספרות לאחר הנקודה. לאחרונה התקבלה החלטה, שלא לאפשר חישובים מעבר ל2- ספרות אחרי הנקודה. מה יקרה לדיווח התקלה, במצב כזה?",
            "ידוע עקרון הבדיקות ''שקריות היעדר השגיאות''. איזו מהפעולות הבאות, עשויה לשפר מעט את התופעה שמתאר עקרון זה?",
            "לאחרונה החליטה מנהלת הפיתוח, שפונקצית האבטחה אשר עד כה היתה מופעלת רק במקרה זהוי איום, תופעל בכל מקרה, לפחות פעם אחת בשעה. איזו השפעה תהיה לכך, על בדיקות האינטגרציה?",
            "להלן רשימת מטלות שצוות הבדיקות צריך לבצע. מכל המטלות להלן, איזו הכי מתאימה להעברה לאוטומציה?",
            "אנחנו מנהלים סיכונים במהלך הפרוייקט. בישיבה היומית, מסתבר שהמשימה הנוכחית לא תסתי ים בזמן המתוכנן – נדרשים עוד כמה ימים אשר יגלשו מעבר למועד שחרור הספרינט הנוכחי כפי שנקבע. מה כדאי לעשות, במקרה כזה?",
            "נתון הקוד הבא:\n Read x; \nIf (x>5) \nthen if(x<8) \nprint ``hello``; \nElse print ``goodbye``; \nPrint ``good day``;",
            "בדיקה בה ניתן לזהות טעויות של השרת בפניות חוזרות הינה בדיקה מסוג:",
            "איזו מהפעולות הבאות, עשויה להקטין את הנתיב הקריטי?",
    };
    private String[] ans1 = new String[]{
            "לבדוק שוב כאשר ה cache של השרת מנוטרל",
            "יעבור למצב closed",
            "לארגן מחדש את מנות הבדיקה",
            "יש להוסיף מקרי בדיקה",
            "הכנת בנק של כ 10000- שמות משתמש למערכת",
            "להתיעץ עם הלקוח",
            "קוד שאינו מתבצע לעולם",
            "תכנון Plan",
            "העברת בדיקות השפיות לאוטומציה",
            "לבדוק שוב כאשר ה cache של השרת מנוטרל",
            "יעבור למצב closed",
            "להוסיף לבדיקות הרגרסיה",
            "יש להוסיף מקרי בדיקה",
            "איתור הודעות שגיאה בלוג",
            "לבקש אישור מהלקוח על העיכוב בפיתוח",
            "סך המקרים הנדרשים לכסוי הצהרות מלא גדול מסך המקרים הנדרשים לכסוי החלטות מלא",
            "בדיקה סטטית",
            "לפצל את בדיקות הרגרסיה בכל יום",
    };
    private String[] ans2 = new String[]{
            "לצמצם ip spoofing",
            "יעבור למצב reject",
            "להעביר את רוב הבדיקות לאוטומציה",
            "יש לצמצם מקרי בדיקה",
            "בדיקות קופסא אפורה על העברת תקשורת המערכת",
            "להחזיר את המשימות לproduct backlog",
            "משתנה שלא מאותחל",
            "ניתוח ועיצוב Analysis and Design",
            "להקדים את בדיקות הביטא טרם האלפא",
            "לצמצם ip spoofing",
            "יעבור למצב reject",
            "לעצב טוב יותר את מקרי הבדיקה",
            "יש לצמצם מקרי בדיקה",
            "הכנת בנק של כ 10000 שמות משתמש למערכת",
            "להחזיר את המשימות לproduct backlog",
            "סך המקרים הנדרשים לכסוי הצהרות מלא שווה ל סך המקרים הנדרשים לכסוי החלטות מלא",
            "בדיקת אימות",
            "ארגון מחודש של ה test sets",
    };
    private String[] ans3 = new String[]{
            "להפריד בין המחולל לשרת",
            "העדיפות עשויה להשתנות",
            "להתחיל את הבדיקות בשלב פיתוח התחלתי יותר",
            "לא יהיה שום שינוי",
            "בדיקות אימות חישובים במערכת",
            "לתת ל scrum master לתעדף מחדש את המשימות",
            "לולאה אינסופית",
            "יישום וביצוע Implement and Execution",
            "להצמיד את בדיקות האבטחה לבדיקות העומסים",
            "להפריד בין המחולל לשרת",
            "העדיפות עשויה להשתנות",
            "להוסיף בדיקות שימושיות",
            "לא יהיה שום שינוי",
            "בדיקות קבלה",
            "להפעיל נוהל חירום ארגוני",
            "סך המקרים הנדרשים לכסוי הצהרות מלא קטן מסך המקרים הנדרשים לכסוי החלטות מלא",
            "בדיקה דינמית",
            "להצמיד את בדיקות היחידה לבדיקות האינטגרציה",
    };
    private String[] ans4 = new String[]{
            "להצמיד את השרת לאשכול cluster",
            "החומרה עשויה ל עלות",
            "לרענן את בסיסי הנתונים של סביבת הבדיקות",
            "לא ניתן לדעת",
            "בדיקות רגרסיה על שימושיות המערכת",
            "לקיים דיון נוסף בצוות",
            "מערך משתנים קצר/ארוך מדי",
            "סיום Closure",
            "להעביר את בדיקות הרגרסיה לסיום הפרויקט",
            "להצמיד את השרת לאשכול cluster",
            "החומרה עשויה להשתנות",
            "לתעדף מחדש את מנות הבדיקה",
            "לא ניתן לדעת",
            "בדיקות רגרסיה על שימושיות המערכת",
            "לקיים דיון נוסף בצוות",
            "לא ניתן להגיע לכסוי החלטות מלא",
            "בדיקת שימושיות",
            "להקדים את בדיקות הביטא",
    };
    private int[] answers = new int[]{
            3,
            3,
            4,
            3,
            4,
            4,
            2,
            3,
            1,
            1,
            2,
            3,
            2,
            1,
            2,
            3,
            3,
            2,
    };
    private int[] scores = new int[]{
            10, 10, 10,
            20, 20, 20,
            30, 30, 30,
            10, 10, 10,
            20, 20, 20,
            30, 30, 30,
    };

    private String[] descriptions = new String[] {
            "sem1_y_2022_1",
            "sem1_y_2022_2",
            "sem1_y_2022_3",
            "sem1_y_2022_4",
            "sem1_y_2022_5",
            "sem1_y_2022_6",
            "sem1_y_2022_7",
            "sem1_y_2022_8",
            "sem1_y_2022_9",
            "sem1_y_2022_10",
            "sem1_y_2022_11",
            "sem1_y_2022_12",
            "sem1_y_2022_13",
            "sem1_y_2022_14",

            "sem1_y_2022_16",
            "sem1_y_2022_17",
            "sem1_y_2022_18",
            "sem1_y_2022_19",
            "sem1_y_2022_20",
            "sem1_y_2022_21",
            "sem1_y_2022_22",
            "sem1_y_2022_23",
            "sem1_y_2022_24",

            "sem1_1_2022_1",
            "sem1_1_2022_2",
            "sem1_1_2022_3",
            "sem1_1_2022_4",
            "sem1_1_2022_5",
            "sem1_1_2022_6",
    };

    private int score = 0;
    private int index = 0;
    private int wrong = 0;
    private int life;

    private ArrayList<Question> questions;

    public GameManager(int life) {
        this.life = life;
        this.isLocked = false;
        questions = new ArrayList<>();
        for (int i = 0; i < names.length; i++) {
            Question c = new Question()
                    .setQuestion(names[i])
                    .setScore(scores[i])
                    .setImage(flags[i])
                    .setCorrect(answers[i])
                    .setAns1(ans1[i]).setAns2(ans2[i]).setAns3(ans3[i]).setAns4(ans4[i])
                    .setDescription(descriptions[i]);

            questions.add(c);
        }

    }

    public void lock(){
        this.isLocked = true;
    }
    public void unlock(){
        this.isLocked = false;
    }

    public boolean isLocked(){return this.isLocked;}

    public int getScore() {
        return score;
    }

    public int getCurrentFlag() {
        return flags[index];
    }

    public String getCurrentName() {
        return names[index];
    }

    public int getWrong() {
        return wrong;
    }

    public boolean isGameEnded(){
        return index >= flags.length;
    }

    public boolean isLose(){
        return life == wrong;
    }

    public int checkAnswer(int answer){
        int correct = answers[index];
        if (correct == answer)
            score += scores[index];
        else
            wrong++;

        index++;
        return correct;
    }

    public String getAnswer1() {
        return ans1[index];
    }


    public String getAnswer2() {
        return ans2[index];
    }

    public String getAnswer3() {
        return ans3[index];
    }

    public String getAnswer4() {
        return ans4[index];
    }
}
